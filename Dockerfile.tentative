# Base image
FROM php:8.4-fpm-alpine AS base

# Arguments
# To use the latest Lychee release instead of master pass `--build-arg TARGET=release` to `docker build`
ARG TARGET=nightly
# To install composer development dependencies, pass `--build-arg COMPOSER_NO_DEV=0` to `docker build`
ARG COMPOSER_NO_DEV=1
# To use another branch instead of master pass `--build-arg BRANCH=some-branch` to `docker build`
# This is NOT compatible with the release target above
ARG BRANCH=master


RUN apk update --no-cache && \
    apk upgrade --no-cache
RUN apk add --no-cache \
        supervisor

FROM base AS build

COPY --from=ghcr.io/mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer

RUN apk add --no-cache \
    $PHPIZE_DEPS \
    linux-headers \
    git
RUN apk add --no-cache \
    freetype-dev \
    jpeg-dev \
    icu-dev \
    libzip-dev && \
    install-php-extensions zip bcmath exif intl pdo_mysql pdo_pgsql pdo_sqlite gd redis imagick

FROM build AS lychee_builder

RUN \
    mkdir -p /var/www/html && \
    cd /var/www/html && \
    if [ "$TARGET" = "release" ] ; then RELEASE_TAG="-b v$(curl -s https://raw.githubusercontent.com/LycheeOrg/Lychee/master/version.md)" ; \
    elif [ "$BRANCH" != "master" ] ; then RELEASE_TAG="-b $BRANCH" ; fi && \
    git clone --depth 1 $RELEASE_TAG https://github.com/LycheeOrg/Lychee.git && \
    mv Lychee/.git/refs/heads/$BRANCH Lychee/$BRANCH || cp Lychee/.git/HEAD Lychee/$BRANCH && \
    mv Lychee/.git/HEAD Lychee/HEAD && \
    rm -r Lychee/.git/* && \
    mkdir -p Lychee/.git/refs/heads && \
    mv Lychee/HEAD Lychee/.git/HEAD && \
    mv Lychee/$BRANCH Lychee/.git/refs/heads/$BRANCH && \
    echo "$TARGET" > /var/www/html/Lychee/docker_target && \
    cd /var/www/html/Lychee && \
    echo "Last release: $(cat version.md)" && \
    composer install --prefer-dist && \
    find . -wholename '*/[Tt]ests/*' -delete && \
    find . -wholename '*/[Tt]est/*' -delete && \
    rm -r storage/framework/cache/data/* 2> /dev/null || true && \
    rm    storage/framework/sessions/* 2> /dev/null || true && \
    rm    storage/framework/views/* 2> /dev/null || true && \
    rm    storage/logs/* 2> /dev/null || true && \
    rm -fr tests

# =============================================================================
# STAGE 2 : Build static assets
#
# This allows us to not include Node within the final container
# =============================================================================
FROM node:20 AS node_builder

RUN mkdir /app

RUN mkdir -p  /app
WORKDIR /app
COPY --from=lychee_builder /var/www/html/Lychee /app

RUN \
    npm ci --no-audit && \
    npm run build

FROM base AS target

# #####################################
# # Install necessary libraries
# #####################################
RUN apk add --no-cache \
    freetype \
    jpeg \
    icu \
    libzip \
    nginx

# #####################################
# # Copy extensions from build stage
# #####################################
COPY --from=build /usr/local/lib/php/extensions/no-debug-non-zts-20240924/* /usr/local/lib/php/extensions/no-debug-non-zts-20240924
COPY --from=build /usr/local/etc/php/conf.d/* /usr/local/etc/php/conf.d

COPY --from=lychee_builder --chown=www-data:www-data /var/www/html/Lychee /var/www/html
COPY --from=node_builder --chown=www-data:www-data /app/public /var/www/html/Lychee/public

# Add custom Nginx configuration
COPY default.conf /etc/nginx/nginx.conf

# Custom supervisor configuration
COPY laravel-worker.conf /etc/supervisor/conf.d/laravel-worker.conf

EXPOSE 80
VOLUME /conf /uploads /sym /logs /lychee-tmp

WORKDIR /var/www/html/Lychee

COPY entrypoint.sh inject.sh /

RUN chmod +x /entrypoint.sh && \
    chmod +x /inject.sh && \
    if [ ! -e /run/php ] ; then mkdir /run/php ; fi

HEALTHCHECK CMD curl --fail http://localhost:80/ || exit 1

ENTRYPOINT [ "/entrypoint.sh" ]

CMD [ "nginx" ]
