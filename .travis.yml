os: linux
dist: xenial
language: generic
arch:
  - amd64
  - arm64
services:
  - docker

env:
  global:
    - NAME=lychee
    - DOCKER_REPO=lycheeorg/lychee
    - OLD_DOCKER_REPO=lycheeorg/lychee-laravel
  jobs:
    - ENVFILE=mysql
    - ENVFILE=postgres
    - ENVFILE=sqlite
    - ENVFILE=sqlite2
    - ENVFILE=default

stages:
  - build
  - test
  - deploy

before_install:
  - if [ "$ENVFILE" = "mysql" ] ; then docker run -d --name=db --network=bridge -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=lychee mariadb:latest ; sleep 20 ; docker ps ; docker container logs db ; fi
  - if [ "$ENVFILE" = "postgres" ] ; then docker run -d --name=db --network=bridge -e POSTGRES_PASSWORD=password -e POSTGRES_DB=lychee postgres:latest ; sleep 20 ; docker ps ; docker container logs db ; fi
script:
  - if [ "$ENVFILE" = "mysql" ] || [ "$ENVFILE" = "postgres" ] ; then LINK_DB="--link db" ; fi ; docker run -d --name=$NAME --env-file=env.$ENVFILE $LINK_DB -p 127.0.0.1:80:80 $DOCKER_REPO':testing' && sleep 45 && docker ps -a | grep -w $NAME && curl -sSw "%{stderr}%{http_code}" http://localhost/ > /dev/null && curl -f http://localhost/
after_script:
  - echo "Logs:" && docker exec $NAME cat /var/www/html/Lychee/storage/logs/laravel.log || echo "No lychee log found"
  - echo "Last 5 lines from Docker output:" && docker container logs --tail=5 $NAME
  - docker stop $NAME && docker rm $NAME
  - docker stop db && docker rm db


jobs:
  include:

    # Build and push to staging
    - stage: build
      arch: amd64
      before_install:
        # Setup multi-arch builds
        - curl -fsSL https://get.docker.com | sh
        - echo '{"experimental":"enabled"}' | sudo tee /etc/docker/daemon.json
        - mkdir -p $HOME/.docker
        - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
        - sudo service docker start
      install:
        - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        - docker buildx create --name xbuilder --use
      script:
        - echo "$REGISTRY_PASS" | docker login -u $REGISTRY_USER --password-stdin
        - echo "Building multi arch and pushing testing"
        - ./deploy.sh


    # Finally Push tags and master
    - stage: deploy
      arch: amd64
      before_install:
        - curl -fsSL https://get.docker.com | sh
        - echo '{"experimental":"enabled"}' | sudo tee /etc/docker/daemon.json
        - mkdir -p $HOME/.docker
        - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
        - sudo service docker start
      install:
        - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        - docker buildx create --name xbuilder --use
      script:
        - echo "Skip script"
      after_script:
        - echo "Skip after_script"
      deploy:
        - provider: script
          on:
            branch: master
          script: ./deploy.sh
        - provider: script
          on:
            tags: true
          script: ./deploy.sh
        - provider: script
          on:
            all_branches: true
          script: ./deploy.sh
